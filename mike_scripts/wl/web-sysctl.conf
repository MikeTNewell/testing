# #######################################################
# NAME: web-sysctl.conf
# DESC: System settings for configuring a Linux middleware
#       server. This file, once placed in the /etc/sysctl.d 
#       directory (on supported Linux versions) will be 
#       called automatically by the system. Order is 
#       important since calling another file with similar 
#       settings will overwrite those previously set.
#       It is important to review this file and enable the
#       correct memory specific settings, and make adjustments
#       where necessary for larger systems.
#
# LOG:
# yyyy/mm/dd [user]: [version] [notes]
# 2014/01/27 cgwong: [v1.0.0] Initial file creation from notes and research.
# 2014/03/10 cgwong: [v1.0.1] Updated to UNIX format
# 2014/07/08 cgwong: [v1.0.2] Minor update to comment verbiage.
# 2014/09/23 cgwong: [v1.0.3] Remove vm.swappiness (defaulted).
#            Default to 8 GB RAM builds.
# #######################################################

# -- START -- #
#-- Debug settings
# Controls the System Request debugging functionality of the kernel
kernel.sysrq = 1

# Append PID to core dump filename, useful for debugging multi-threaded applications
kernel.core_pattern=core.%e.%p

fs.suid_dumpable=1

#-- File I/O settings
# Maximum number of open files (typically 512 x processes).
# Set for 8192 processes
fs.file-max = 4194304

#-- Memory settings â€“ values are for 8GB RAM
# Controls maximum shared segment set, in bytes.
# Set to at least 50% of RAM
# 4GB RAM
##kernel.shmmax = 2147483648
# 8GB RAM
kernel.shmmax = 4294967296
# 16GB RAM
##kernel.shmmax = 8589934592
# 32GB RAM
##kernel.shmmax = 17179869184
# 64GB RAM
##kernel.shmmax = 34359738368
# 128GB RAM
##kernel.shmmax = 68719476736

# Controls maximum number of shared memory segments, in pages.
# RAM in bytes / pagesize (4096)
# 4GB RAM
##kernel.shmall = 1048576
# 8GB RAM
kernel.shmall = 2097152
# 16GB RAM
##kernel.shmall = 4194304
# 32GB RAM
##kernel.shmall = 8388608
# 64GB RAM
##kernel.shmall = 16777216
# 128GB RAM
##kernel.shmall = 33554432

#-- Virtual memory
# Do not aggressively swap to maximise performance at the cost of
# getting killed due to system OOM Killer when under memory pressure
##vm.swappiness = 0
# Default swappiness
# vm.swappiness = 60
# Aggressively swap to ensure availability at the cost of performance
##vm.swappiness = 100

# Percentage of main memory the pdflush daemon should write data out to disk
vm.dirty_background_ratio = 25

# Percentage of main memory the actual disk writes will use.
vm.dirty_ratio = 15

vm.dirty_expire_centisecs = 500
vm.dirty_writeback_centisecs = 100

# Allocate vm.nr_hugepages as SUM(JVMs) / HugePagesize (2048)
# Allocate for more batch-oriented workloads
# Do not allocate for Web Server
##vm.nr_hugepages=3072

#-- Network settings
# TCP receive buffer size
# Depending on type of NIC and round-trip time these values can be changed
net.core.rmem_max = 8388608
net.core.rmem_default = 8388608

# Maximum TCP Send Window
net.core.wmem_max = 8388608
net.core.wmem_default = 8388608

# Memory reserved for TCP receive buffers (vector of 3 integers: [min, default, max])
net.ipv4.tcp_rmem = 4096 87380 8388608
# Memory reserved for TCP send buffers (vector of 3 integers: [min, default, max])
net.ipv4.tcp_wmem = 4096 87380 8388608

# Increase length of the processor input queue
net.core.netdev_max_backlog = 30000

# Max amount of memory buffers.
# Could be set equal to net.core.rmem_max and net.core.wmem_max)
net.core.optmem_max = 20480

# Socket of the listen backlog
net.core.somaxconn = 1024

# TCP selective acknowledgements (disabled for high-speed networks)
net.ipv4.tcp_sack = 0
net.ipv4.tcp_dsack = 0

# Timestamps add 12 bytes to the TCP header
net.ipv4.tcp_timestamps = 1

# Support for large TCP Windows
# Set to 1 if the Max TCP Window is over 65535
net.ipv4.tcp_window_scaling = 1

# Interval between the last data packet sent
# (simple ACKs are not considered data) and first keepalive probe
net.ipv4.tcp_keepalive_time = 1800

# Interval between subsequent keepalive probes,
# regardless of what the connection has exchanged in the meantime
##net.ipv4.tcp_keepalive_intvl = 30

# Number of unacknowledged probes to send before
# considering the connection dead and notifying the appl layer
net.ipv4.tcp_keepalive_probes = 5

# Time that must elapse before TCP/IP can release 
# a closed connection and reuse its resources.
# During this TIME_WAIT state, reopening the connection 
# to the client costs less than establishing a new connection.
# By reducing the value of this entry, TCP/IP can release 
# closed connections faster, making more resources 
# available for new connections.
net.ipv4.tcp_fin_timeout = 30

# Size of the backlog connections queue.
net.ipv4.tcp_max_syn_backlog = 4096

# The tcp_tw_reuse setting is particularly useful 
# in environments where numerous short connections are open 
# and left in TIME_WAIT state, such as web servers. 
# Reusing the sockets can be effective in reducing server load.
net.ipv4.tcp_tw_reuse = 1
net.ipv4.tcp_tw_recycle = 1

#-- Messages
# Controls the maximum size of a message, in bytes
kernel.msgmnb = 65536
# Controls the default maximum size of a message queue
kernel.msgmax = 65536

# -- END -- #